name: "Terraform"
description: "This action initializes, validates, and plans infrastructure changes using Terraform."
inputs:
  tf-api-token:
    description: The Terraform Cloud API token to use when invoking CLI commands.
    required: true
  working-directory:
    description: The directory to use when invoking Terraform CLI commands.
    required: true
runs:
  using: "composite"
  steps:
    - name: Download Artifact
      uses: actions/download-artifact@v3
      with:
        name: out
        path: ${{ inputs.working-directory }}/out
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        cli_config_credentials_token: ${{ inputs.tf-api-token }}
    - name: Terraform Init
      id: init
      run: terraform init
      shell: bash
      working-directory: ${{ inputs.working-directory }}
    - name: Terraform Validate
      id: validate
      run: terraform validate -no-color
      shell: bash
      working-directory: ${{ inputs.working-directory }}
    - name: Terraform Plan
      id: plan
      run: terraform plan -no-color -var='aliases=["chantzlarge.com"]' -var='viewer_certificates=[{"cloudfront_default_certificate":false,"acm_certificate_arn":"arn:aws:acm:us-east-1:752363909310:certificate/6f6af749-6436-49d7-ad7d-37ca817eaf9f","minimum_protocol_version":"TLSv1.2_2021","ssl_support_method":"sni-only"}]'
      shell: bash
      working-directory: ${{ inputs.working-directory }}
    - name: Terraform Apply
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      id: apply
      run: terraform apply -auto-approve -input=false -var='aliases=["chantzlarge.com"]' -var='viewer_certificates=[{"cloudfront_default_certificate":false,"acm_certificate_arn":"arn:aws:acm:us-east-1:752363909310:certificate/6f6af749-6436-49d7-ad7d-37ca817eaf9f","minimum_protocol_version":"TLSv1.2_2021","ssl_support_method":"sni-only"}]'
      shell: bash
      working-directory: ${{ inputs.working-directory }}
